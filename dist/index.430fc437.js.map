{"mappings":"AAAA,KAAK,CAAC,eAAe,GAAG,QAAQ,CAAC,aAAa,CAAC,CAAS;AAExD,KAAK,CAAC,OAAO,GAAG,QAAQ,CAAE,CAAC,EAAE,CAAC;IAC5B,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,QAAQ,CAAE,CAAC,EAAE,MAAM,EAAE,CAAC;QACvC,UAAU,CAAC,QAAQ,GAAI,CAAC;YACtB,MAAM,CAAC,GAAG,CAAC,KAAK,EAAE,qCAAqC,EAAE,CAAC,CAAC,OAAO;QACpE,CAAC,EAAE,CAAC,GAAG,IAAI;IACb,CAAC;AACH,CAAC;AAED,EAAuC,AAAvC,qCAAuC;AACvC,KAAK,CAAC,aAAa,oBAAqB,CAAC;IACvC,GAAG,CAAC,CAAC;QACH,EAAe,AAAf,aAAe;QACf,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC,KAAK,EACpB,yEAAyE;QAE5E,EAA0C,AAA1C,wCAA0C;QAC1C,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,GAAG,CAAC,IAAI;QAC3B,EAA+B,AAA/B,6BAA+B;QAC/B,EAAE,GAAG,GAAG,CAAC,EAAE,EACT,KAAK,CAAC,GAAG,CAAC,KAAK,EAAE,iBAAiB,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,GAAG,CAAC,MAAM;QAChE,EAA8C,AAA9C,4CAA8C;QAC9C,GAAG,CAAC,CAAC,CAAC,MAAM,EAAC,CAAC,GAAG,IAAI,CAAC,IAAI;QAC1B,MAAM,GAAG,CAAC;YACR,EAAE,EAAE,MAAM,CAAC,EAAE;YACb,KAAK,EAAE,MAAM,CAAC,KAAK;YACnB,SAAS,EAAE,MAAM,CAAC,SAAS;YAC3B,SAAS,EAAE,MAAM,CAAC,UAAU;YAC5B,KAAK,EAAE,MAAM,CAAC,SAAS;YACvB,WAAW,EAAE,MAAM,CAAC,YAAY;YAChC,WAAW,EAAE,MAAM,CAAC,WAAW;YAC/B,QAAQ,EAAE,MAAM,CAAC,QAAQ;QAC3B,CAAC;QACD,EAAgC,AAAhC,8BAAgC;QAChC,KAAK,CAAC,IAAI,IAAI;;;cAGJ,EAAE,MAAM,CAAC,KAAK,CAAC,OAAO,EAAE,MAAM,CAAC,KAAK,CAAC;;YAEvC,EAAE,MAAM,CAAC,KAAK,CAAC;;;;;;;;;iEASsC,EACzD,MAAM,CAAC,WAAW,CACnB;;;;;;;gEAOyD,EACxD,MAAM,CAAC,QAAQ,CAChB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAgCH,EAAE,MAAM,CAAC,WAAW,CACjB,GAAG,EAAC,GAAG,GAAI,CAAC;YACX,MAAM,EAAE;;;;;oCAKoB,EAC5B,GAAG,CAAC,QAAQ,KAAK,IAAI,GAAG,CAAE,OAAM,GAAG,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,GAC/D;;mCAE4B,EAAE,GAAG,CAAC,IAAI,CAAC;QACtC,EAAE,GAAG,CAAC,WAAW,CAAC;;SAEjB;QACH,CAAC,EACA,IAAI,CAAC,CAAE,GAAE;;;;;;;;sCAQsB,EAC9B,MAAM,CAAC,SAAS,CACjB;;;;;YAKK,EAAE,MAAM,CAAC,SAAS,CAAC;;;;;;;;;EAS7B;QACE,eAAe,CAAC,SAAS,GAAG,CAAE;QAC9B,eAAe,CAAC,kBAAkB,CAAC,CAAY,aAAE,IAAI;IACvD,CAAC,CAAC,KAAK,EAAE,GAAG,EAAE,CAAC;QACb,OAAO,CAAC,GAAG,CAAC,GAAG;IACjB,CAAC;AACH,CAAC;AAED,aAAa","sources":["src/js/controller.js"],"sourcesContent":["const recipeContainer = document.querySelector('.recipe');\n\nconst timeout = function (s) {\n  return new Promise(function (_, reject) {\n    setTimeout(function () {\n      reject(new Error(`Request took too long! Timeout after ${s} second`));\n    }, s * 1000);\n  });\n};\n\n// https://forkify-api.herokuapp.com/v2\nconst GetOneReceipe = async function () {\n  try {\n    // fetch recipe\n    const res = await fetch(\n      `https://forkify-api.herokuapp.com/api/v2/recipes/5ed6604591c37cdc054bc886`\n    );\n    // extracting data from promise using json\n    const data = await res.json();\n    // guard for throwing new error\n    if (!res.ok)\n      throw new Error(`loading failed : ${data.message} ${res.status}`);\n    // reformating recipe object from fetched data\n    let { recipe } = data.data;\n    recipe = {\n      id: recipe.id,\n      title: recipe.title,\n      publisher: recipe.publisher,\n      sourceUrl: recipe.source_url,\n      image: recipe.image_url,\n      cookingTime: recipe.cooking_time,\n      ingredients: recipe.ingredients,\n      servings: recipe.servings,\n    };\n    // Set it Up recipe into the DOM\n    const html = `\n  \n  <figure class=\"recipe__fig\">\n    <img src=\"${recipe.image}\" alt=\"${recipe.title}\" class=\"recipe__img\" />\n    <h1 class=\"recipe__title\">\n      <span>${recipe.title}</span>\n    </h1>\n  </figure>\n\n  <div class=\"recipe__details\">\n    <div class=\"recipe__info\">\n      <svg class=\"recipe__info-icon\">\n        <use href=\"src/img/icons.svg#icon-clock\"></use>\n      </svg>\n      <span class=\"recipe__info-data recipe__info-data--minutes\">${\n        recipe.cookingTime\n      }</span>\n      <span class=\"recipe__info-text\">minutes</span>\n    </div>\n    <div class=\"recipe__info\">\n      <svg class=\"recipe__info-icon\">\n        <use href=\"src/img/icons.svg#icon-users\"></use>\n      </svg>\n      <span class=\"recipe__info-data recipe__info-data--people\">${\n        recipe.servings\n      }</span>\n      <span class=\"recipe__info-text\"> Servings</span>\n\n      <div class=\"recipe__info-buttons\">\n        <button class=\"btn--tiny btn--increase-servings\">\n          <svg>\n            <use href=\"src/img/icons.svg#icon-minus-circle\"></use>\n          </svg>\n        </button>\n        <button class=\"btn--tiny btn--increase-servings\">\n          <svg>\n            <use href=\"src/img/icons.svg#icon-plus-circle\"></use>\n          </svg>\n        </button>\n      </div>\n    </div>\n\n    <div class=\"recipe__user-generated\">\n      <svg>\n        <use href=\"src/img/icons.svg#icon-user\"></use>\n      </svg>\n    </div>\n    <button class=\"btn--round\">\n      <svg class=\"\">\n        <use href=\"src/img/icons.svg#icon-bookmark-fill\"></use>\n      </svg>\n    </button>\n  </div>\n\n  <div class=\"recipe__ingredients\">\n    <h2 class=\"heading--2\">Recipe ingredients</h2>\n    <ul class=\"recipe__ingredient-list\">\n    ${recipe.ingredients\n      .map(ing => {\n        return `\n      <li class=\"recipe__ingredient\">\n      <svg class=\"recipe__icon\">\n        <use href=\"src/img/icons.svg#icon-check\"></use>\n      </svg>\n      <div class=\"recipe__quantity\">${\n        ing.quantity === null ? '' : `${ing.quantity * recipe.servings}`\n      }</div>\n      <div class=\"recipe__description\">\n        <span class=\"recipe__unit\">${ing.unit}</span>\n        ${ing.description}\n      </div>\n    </li>`;\n      })\n      .join('')}\n    </ul>\n  </div>\n\n  <div class=\"recipe__directions\">\n    <h2 class=\"heading--2\">How to cook it</h2>\n    <p class=\"recipe__directions-text\">\n      This recipe was carefully designed and tested by\n      <span class=\"recipe__publisher\">${\n        recipe.publisher\n      }</span>. Please check out\n      directions at their website.\n    </p>\n    <a\n      class=\"btn--small recipe__btn\"\n      href=\"${recipe.sourceUrl}\"\n      target=\"_blank\"\n    >\n      <span>Directions</span>\n      <svg class=\"search__icon\">\n        <use href=\"src/img/icons.svg#icon-arrow-right\"></use>\n      </svg>\n    </a>\n  </div>\n  `;\n    recipeContainer.innerHTML = '';\n    recipeContainer.insertAdjacentHTML('afterbegin', html);\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nGetOneReceipe();\n"],"names":[],"version":3,"file":"index.430fc437.js.map","sourceRoot":"/__parcel_source_root/"}